
/****************************************************************
Start of: Notable code view cursor and selected text or tag(s)
https://github.com/flkeysgeek/DW-CC-2017-code-coloring-pref   

NOTE: 
    DW prefixes all these selectors with "#editor-holder" so 

        body.dark .CodeMirror-cursor

    becomes 
        #editor-holder body.dark .CodeMirror-cursor

    ...so the following form is used to reference body class:

        body.dark & .CodeMirror-cursor {                  

    becomes:
        body.dark #editor-holder .CodeMirror-cursor {                  

*****************************************************************/

						/*************************************/
						/* line numbers -- lighter for dark */
                    	/***********************************/
body.dark & .CodeMirror-linenumber {
    color: #B2B2B2;
}
                    	/***************************************/
                    	/* comments -- not dull grey #919191; */
                    	/*************************************/
body.dark & .cm-comment {
	color: rgba(255,192,203,0.90);         	/* light pink for dark */
	font-style: normal;					   	/* kill italics default */
}
body:not(.dark) & .cm-comment {
	color: #007F00;                        	/* green for light theme */
}
                    	/*******************************/
						/* cursor -- taller and wider */
						/*****************************/
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursors {
	visibility: visible !important;			/* in case DW left wrapper hidden */		
	opacity: 1.0;							/* in case animation did not finish */
}
body.dark &
.CodeMirror .CodeMirror-cursor,      		/* yellow for dark themes */
.CodeMirror-cursors:not(.CodeMirror-overwrite) .CodeMirror-cursor {
    border-left: 2px solid yellow !important; 	
}
body:not(.dark) & 
.CodeMirror .CodeMirror-cursor, 			/* navy blue for light themes */
.CodeMirror-cursors:not(.CodeMirror-overwrite) .CodeMirror-cursor {      
    border-left: 2px solid navy !important; 	
}

.CodeMirror:not(.CodeMirror-focused) .CodeMirror-overwrite .CodeMirror-cursor { 
    border-left: 1px solid yellow !important; 	
    border-bottom: 0px solid red;       
}
.CodeMirror.CodeMirror-focused .CodeMirror-overwrite .CodeMirror-cursor {
    border-bottom: 3px solid red;   		/* thick red for overwrite mode */    
    margin-top: -2px !important;
    border-left: 0px solid transparent !important;
	width: 0.7em;
}
						/*****************************************/
						/* tail on cursor when code view blured */
						/***************************************/
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {    
    content: "";                            
    position: absolute;
    top: 0;
    left: 0px;
    border-style: solid;
    border-color: transparent;
    border-width: 7.3px 0px 7px 0px;  
    height: 0px;
    display: inline-block;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor {	                         
    min-height: 14px; 
    line-height:14px;
}
						/****************************************/
						/* blinking cursor in code view blured */
						/**************************************/
@keyframes blinking {                              
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor {
	animation: blinking 1.5s 10;		//blinking for 15 sec    
	-webkit-transition: all 1.0s 20.0s;
	transition: all 1.0s 20.0s;			//redundant as safety
	opacity: 1.0;
	
	border-left-width: 1px;				// solid yellow !important; 	
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {    
    border-left-width: 30px !important;
}

body.dark & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {    
    border-left-color: rgba(240,255,0,0.40);
}
body:not(.dark) & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {    
    border-left-color: rgba(159,225,244,0.60);

}
                    /*********************************************/
                    /* BG color of selected text or html tag(s) */
                    /*******************************************/
body.dark & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected {
    background: rgba(0, 149, 255, 0.6);
}
body:not(.dark) & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected {
    background: rgba(121, 215, 244, 0.7);
}
                    /*************************************/
                    /* arrows above and below selection */
                    /***********************************/
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:first-of-type:before,
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:last-of-type:after {
    content: "";
    position: absolute;
    border-style: solid;
    border-color: transparent;
    height: 0px;
    display: inline-block;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:first-of-type:before {
    top: -6px;
    left: -11px;
    border-width: 5px 0px 5px 14px;
    transform: rotate(50deg);
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:last-of-type:after {
    bottom: -6px;
    right: -11px;
    border-width: 5px 14px 5px 0px;
    transform: rotate(50deg);         
}
body.dark & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:first-of-type:before {
    border-left-color: #ffc41d; 
}
body.dark & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:last-of-type:after {
    border-right-color: #ffc41d;    
}
body:not(.dark) & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:first-of-type:before {
    border-left-color: darkblue; 
}
body:not(.dark) & .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected:last-of-type:after {
    border-right-color: darkblue;    
}
