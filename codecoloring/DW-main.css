/* Define some variables used in multiple places */
/* 1. Background color for the code view */
/* 2. Foreground color for the code view (Regular strings or text) */
/* Code Styling */
.CodeMirror,
.CodeMirror-scroll {
  background-color: #202020;
  color: #e9e9e9;
}
/* NA */
.CodeMirror-focused .CodeMirror-activeline-background {
  background: #b7b7b7;
}
/* NA */
.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
  box-shadow: inset 15px 0 0 0 #000;
}
/* NA */
.CodeMirror-focused .CodeMirror-activeline {
  /* NA */
}
.CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
.CodeMirror-focused .CodeMirror-activeline .inline-widget .CodeMirror-gutter-elt {
  color: #767676;
}
/* Color Theme Selectors & Color Values */
.cm-atom,
.cm-string,
.cm-string-2,
.cm-hr {
  color: #ffdc79;
}
.cm-number,
.cm-attribute,
.cm-plus,
.cm-qualifier {
  color: #a4eba9;
}
.cm-def,
.cm-property {
  color: #a4eba9;
}
.cm-variable,
.cm-variable-2,
.cm-variable-3,
.cm-operator,
.cm-meta,
.cm-bracket {
  color: #e9e9e9;
}
.cm-comment {
  color: #919191;
}
.cm-error,
.cm-minus {
  color: #fc8889;
}
.cm-header {
  color: #848877;
}
.cm-link {
  color: #81d5ef;
  text-decoration: none;
}
.cm-rangeinfo {
  color: #bee3ed;
}
.cm-keyword,
.cm-builtin,
.cm-tag,
.cm-quote {
  color: #99cdff;
}
/* HTML Specific Code Colouring */
.HTML .cm-keyword,
.HTML .cm-qualifier,
.HTML .cm-builtin,
.HTML .cm-tag,
.HTML .cm-quote {
  color: #99cdff;
}
.HTML .cm-number,
.HTML .cm-atom {
  color: #FE8FA2;
}
.HTML .cm-attribute {
  color: #e9e9e9;
}
.HTML .cm-string {
  color: #ffdc79;
}
.HTML .cm-bracket {
  color: #99cdff;
}
.HTML .cm-property {
  color: #ffc39c;
}
/* PHP Specific Code Colouring */
.PHP .cm-meta {
  color: #ab80ff;
}
.PHP .cm-keyword,
.PHP .cm-builtin {
  color: #a4eba9;
}
.PHP .cm-bracket,
.PHP .cm-tag,
.PHP .cm-def,
.PHP .cm-variable {
  color: #82C1FF;
}
.PHP .cm-string {
  color: #ffdc79;
}
.PHP .cm-operator {
  color: #e9e9e9;
}
.PHP .cm-variable-2 {
  color: #FF76A4;
}
.PHP .cm-number {
  color: #FF6F00;
}
/* JavaScript Specific Code Colouring */
.JavaScript .cm-variable,
.JavaScript .cm-variable-2,
.JavaScript .cm-string-2 {
  color: #e9e9e9;
}
.JavaScript .cm-def,
.JavaScript .cm-property {
  color: #82C1FF;
}
.JavaScript .cm-string {
  color: #ffdc79;
}
.JavaScript .cm-keyword,
.JavaScript .cm-atom {
  color: #a4eba9;
}
.JavaScript .cm-number {
  color: #fc8889;
}
/* CSS, SCSS, LESS Specific Code Colouring */
.CSS .cm-string,
.SCSS .cm-string,
.LESS .cm-string,
.CSS .cm-string-2,
.SCSS .cm-string-2,
.LESS .cm-string-2,
.CSS .cm-link,
.SCSS .cm-link,
.LESS .cm-link,
.CSS .cm-rangeinfo,
.SCSS .cm-rangeinfo,
.LESS .cm-rangeinfo {
  color: #ffdc79;
}
.CSS .cm-tag,
.SCSS .cm-tag,
.LESS .cm-tag {
  color: #a4eba9;
}
.CSS .cm-keyword,
.SCSS .cm-keyword,
.LESS .cm-keyword,
.CSS .cm-atom,
.SCSS .cm-atom,
.LESS .cm-atom,
.CSS .cm-hr,
.SCSS .cm-hr,
.LESS .cm-hr,
.CSS .cm-variable,
.SCSS .cm-variable,
.LESS .cm-variable,
.CSS .cm-number,
.SCSS .cm-number,
.LESS .cm-number,
.CSS .cm-attribute,
.SCSS .cm-attribute,
.LESS .cm-attribute,
.CSS .cm-plus,
.SCSS .cm-plus,
.LESS .cm-plus,
.CSS .cm-error,
.SCSS .cm-error,
.LESS .cm-error,
.CSS .cm-minus,
.SCSS .cm-minus,
.LESS .cm-minus {
  color: #fc8889;
}
.CSS .cm-variable-4,
.SCSS .cm-variable-4,
.LESS .cm-variable-4 {
  color: #ffae5e !important;
}
.CSS .cm-def,
.SCSS .cm-def,
.LESS .cm-def {
  color: #B28BFF;
}
.CSS .cm-meta,
.SCSS .cm-meta,
.LESS .cm-meta,
.CSS .cm-property,
.SCSS .cm-property,
.LESS .cm-property {
  color: #ffc39c;
}
.CSS .cm-qualifier,
.SCSS .cm-qualifier,
.LESS .cm-qualifier,
.CSS .cm-builtin,
.SCSS .cm-builtin,
.LESS .cm-builtin,
.CSS .cm-quote,
.SCSS .cm-quote,
.LESS .cm-quote,
.CSS .cm-variable-2,
.SCSS .cm-variable-2,
.LESS .cm-variable-2,
.CSS .cm-variable-3,
.SCSS .cm-variable-3,
.LESS .cm-variable-3 {
  color: #99cdff;
}
.CSS .cm-operator,
.SCSS .cm-operator,
.LESS .cm-operator,
.CSS .cm-bracket,
.SCSS .cm-bracket,
.LESS .cm-bracket {
  color: #e9e9e9;
}
.JSON .cm-comment {
  color: #e9e9e9;
  font-style: normal;
}
/* Extra CSS */
.CodeMirror-searching {
  background-color: #ffe497;
  color: #222222 !important;
}
.CodeMirror-searching.searching-current-match {
  background-color: #ffc41d;
  color: #222222 !important;
}
.CodeMirror-cursor {
  border-left: 1px solid #e9e9e9 !important;
}
.CodeMirror-gutters {
  background-color: #202020;
  border-right: none;
}
/* sequence numbers */
.CodeMirror-linenumber {
  color: #919191;
}
/* drag & Select text ,change focus */
.CodeMirror .CodeMirror-selected {
  background: rgba(255, 255, 255, 0.23);
  transition: all 360ms ease;
}
/* drag & Select text*/
.CodeMirror-focused .CodeMirror-selected {
  background: rgba(0, 149, 255, 0.6);
  color: #ffffff !important;
}
/* drag & Select text ,change focus */
.CodeMirror .CodeMirror-selected-codefolding {
  background: rgba(199, 199, 199, 0.3);
}
/* drag & Select text*/
.CodeMirror-focused .CodeMirror-selected-codefolding {
  border: solid 1px rgba(157, 163, 180, 0.8) !important;
  background: rgba(8, 31, 52, 0.38);
}
.CodeMirror-matchingbracket,
.CodeMirror-matchingtag {
  /* Ensure visibility against gray inline editor background */
  background-color: #00679B;
  color: #fff!important;
}
.CodeMirror-overwrite .CodeMirror-cursor {
  border-left: none !important;
  border-bottom: 1px solid #fff;
}
/*
    CodeMirror's use of descendant selectors for certain styling causes problems when editors are
    nested because, for items in the inner editor, the left-hand clause in the selector will now
    match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.

    TODO (issue #324): We'll still have problems if editors can be nested more than one level deep,
    or if any other descendant-selector-driven CM styles can differ between inner & outer editors
    (potential problem areas include line wrap and coloring theme: basically, anything in codemirror.css
    that uses a descandant selector where the CSS class name to the left of the space is something
    other than a vanilla .CodeMirror)
 */
.CodeMirror .CodeMirror {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-gutters {
  background: transparent;
  border-right: none;
}
.CodeMirror .CodeMirror .CodeMirror-activeline-background {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: transparent;
  color: #767676;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline-background {
  background: #777;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
/* dropdown icon - normal */
.CodeMirror-foldgutter-open:after {
  color: #666;
}
/* dropdown icon - when closed */
.CodeMirror-foldgutter-folded:after {
  color: #aaa;
}
/* dropdown icon - hover */
.CodeMirror.over-gutter .CodeMirror-foldgutter-open:after,
.CodeMirror-activeline .CodeMirror-foldgutter-open:after {
  color: #888;
}
/* three dotted line box */
.CodeMirror-foldmarker {
  border-color: #595b5c;
  color: #bcbcbc;
  background-color: #464748;
  box-shadow: inset 0px 0px 1px 0px #bcbcbc;
}
/* Non-editor styling */
.image-view,
.not-editor {
  background-color: #202020;
}
.view-pane .image-view {
  color: #e9e9e9;
}

/*# sourceMappingURL=DW-main.css.map */