/* DELETED COPYRIGHT & INSTRUCTIONS during development */
/* Define some variables used in multiple places */
/* 1. Background color for the code view */
/* 2. Foreground color for the code view (Regular strings or text) */
/* Code Styling */
.CodeMirror,
.CodeMirror-scroll {
  background-color: #fdfdfd;
  color: #3a3a3a;
}
/* NA */
.CodeMirror-focused .CodeMirror-activeline-background {
  background: #c3c3c3;
}
/* NA */
.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
  box-shadow: inset 15px 0 0 0 #000;
}
/* NA */
.CodeMirror-focused .CodeMirror-activeline {
  /* NA */
}
.CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
.CodeMirror-focused .CodeMirror-activeline .inline-widget .CodeMirror-gutter-elt {
  color: #626262;
}
.cm-atom,
.cm-string,
.cm-string-2,
.cm-hr {
  color: #0008FF;
}
.cm-number,
.cm-attribute,
.cm-plus,
.cm-qualifier {
  color: #1EA1F5;
}
.cm-def,
.cm-property {
  color: #7347B9;
}
.cm-variable,
.cm-variable-2,
.cm-variable-3,
.cm-operator,
.cm-meta {
  color: #3a3a3a;
}
.cm-bracket {
  color: #5B5B5B;
}
.cm-comment {
  color: #969696;
  font-style: normal;
}
.cm-error,
.cm-minus {
  color: #E96D3B;
}
.cm-header {
  color: #87908e;
}
.cm-link {
  color: #17939D;
  text-decoration: none;
}
.cm-rangeinfo {
  color: #17939D;
}
.cm-bracket,
.cm-keyword,
.cm-builtin,
.cm-tag,
.cm-quote {
  color: #0877BD;
}
/* check above against zero dark for completeness not colors
.cm-atom {
  color: #89f5a2 !important;
}
.cm-comment {
  color: #676767 !important;
  font-style: italic;
}
.cm-variable {
  color: #ccc !important;
}
.cm-string {
  color: #f07b3c !important;
}
.cm-keyword {
  color: #8b6ccf !important;
  font-style: italic;
}
.cm-number {
  color: #89f5a2 !important;
}
.cm-operator {
  color: #cdb943 !important;
}
.cm-error {
  background: #9D1E15 !important;
  color: #ccc !important;
}
.cm-s-default .cm-property {
  color: #ccc !important;
}
*/
/* HTML Specific Code Colouring */
.HTML .cm-keyword,
.HTML .cm-builtin,
.HTML .cm-tag,
.HTML .cm-quote,
.HTML .cm-bracket {
  color: #06639D;
}
.HTML .cm-number {
  color: #B400B4;
}
.HTML .cm-atom {
  color: #C737C7;
}
.HTML .cm-attribute,
.HTML .cm-qualifier {
  color: #1EA1F5;
}
.HTML .cm-bracket {
  color: #06639D;
}
.HTML .cm-property {
  color: #729443;
}
.HTML .cm-qualifier {
  color: #0008FF;
}
/* PHP Specific Code Colouring */
.PHP .cm-meta {
  color: #DE2316;
}
.PHP .cm-keyword,
.PHP .cm-builtin {
  color: #825CC0;
}
.PHP .cm-tag {
  color: #06639D;
}
.PHP .cm-def,
.PHP .cm-variable {
  color: #545454;
}
.PHP .cm-bracket {
  color: #006767;
}
.PHP .cm-string {
  color: #0008FF;
}
.PHP .cm-operator {
  color: #212121;
}
.PHP .cm-variable-2 {
  color: #E77E04;
}
.PHP .cm-number {
  color: #039BE5;
}
/* JavaScript Specific Code Colouring */
.JavaScript .cm-def,
.JavaScript .cm-variable,
.JavaScript .cm-variable-2,
.JavaScript .cm-property,
.JavaScript .cm-string-2 {
  color: #545454;
}
.JavaScript .cm-property {
  color: #E97F05;
}
.JavaScript .cm-string {
  color: #0000D7;
}
.JavaScript .cm-keyword,
.JavaScript .cm-atom {
  color: #7950BC;
}
.JavaScript .cm-number {
  color: #B300B3;
}
/* CSS, SCSS, LESS Specific Code Colouring */
.CSS .cm-string,
.SCSS .cm-string,
.LESS .cm-string,
.CSS .cm-string-2,
.SCSS .cm-string-2,
.LESS .cm-string-2,
.CSS .cm-link,
.SCSS .cm-link,
.LESS .cm-link,
.CSS .cm-rangeinfo,
.SCSS .cm-rangeinfo,
.LESS .cm-rangeinfo {
  color: #648C2C;
}
.CSS .cm-tag,
.SCSS .cm-tag,
.LESS .cm-tag {
  color: #494949;
}
.CSS .cm-keyword,
.SCSS .cm-keyword,
.LESS .cm-keyword,
.CSS .cm-atom,
.SCSS .cm-atom,
.LESS .cm-atom,
.CSS .cm-variable-4,
.SCSS .cm-variable-4,
.LESS .cm-variable-4,
.CSS .cm-hr,
.SCSS .cm-hr,
.LESS .cm-hr,
.CSS .cm-number,
.SCSS .cm-number,
.LESS .cm-number,
.CSS .cm-attribute,
.SCSS .cm-attribute,
.LESS .cm-attribute,
.CSS .cm-plus,
.SCSS .cm-plus,
.LESS .cm-plus,
.CSS .cm-error,
.SCSS .cm-error,
.LESS .cm-error,
.CSS .cm-minus,
.SCSS .cm-minus,
.LESS .cm-minus {
  color: #B400B4;
}
.CSS .cm-def,
.SCSS .cm-def,
.LESS .cm-def {
  color: #E57D05;
}
.CSS .cm-property,
.SCSS .cm-property,
.LESS .cm-property,
.CSS .cm-operator,
.SCSS .cm-operator,
.LESS .cm-operator,
.CSS .cm-bracket,
.SCSS .cm-bracket,
.LESS .cm-bracket {
  color: #4A4543;
}
.CSS .cm-qualifier,
.SCSS .cm-qualifier,
.LESS .cm-qualifier,
.CSS .cm-builtin,
.SCSS .cm-builtin,
.LESS .cm-builtin,
.CSS .cm-quote,
.SCSS .cm-quote,
.LESS .cm-quote {
  color: #0007E3;
}
.CSS .cm-variable,
.SCSS .cm-variable,
.LESS .cm-variable,
.CSS .cm-variable-2,
.SCSS .cm-variable-2,
.LESS .cm-variable-2,
.CSS .cm-variable-3,
.SCSS .cm-variable-3,
.LESS .cm-variable-3 {
  color: darkcyan;
}
/* Extra CSS */
.CodeMirror-searching {
  background-color: #fee994;
  color: #393939 !important;
}
.CodeMirror-searching.searching-current-match {
  background-color: #f5a644;
  color: #393939 !important;
}
.CodeMirror-cursor {
  border-left: 1px solid #575757 !important;
}
.CodeMirror-gutters {
  background-color: #fdfdfd;
  border-right: none;
}
/* sequence numbers */
.CodeMirror-linenumber {
  color: #a7a7a7;
}
/* drag & Select text */
.CodeMirror .CodeMirror-selected {
  background: rgba(199, 199, 199, 0.8);
}
/* drag & Select text, change focus */
.CodeMirror-focused .CodeMirror-selected {
  background: rgba(120, 171, 222, 0.45);
}
/* drag & Select text ,change focus */
.CodeMirror .CodeMirror-selected-codefolding {
  background: rgba(199, 199, 199, 0.8);
}
/* drag & Select text*/
.CodeMirror-focused .CodeMirror-selected-codefolding {
  border: solid 1px rgba(37, 56, 112, 0.67) !important;
  background: rgba(200, 209, 231, 0.5);
  color: #1e1e1e !important;
}
.CodeMirror-overwrite .CodeMirror-cursor {
  border-left: none !important;
  border-bottom: 1px solid #626262;
}
/*
CodeMirror's use of descendant selectors for certain styling causes problems when editors are
nested because, for items in the inner editor, the left-hand clause in the selector will now
match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.

TODO (issue #324): We'll still have problems if editors can be nested more than one level deep,
or if any other descendant-selector-driven CM styles can differ between inner & outer editors
(potential problem areas include line wrap and coloring theme: basically, anything in codemirror.css
that uses a descandant selector where the CSS class name to the left of the space is something
other than a vanilla .CodeMirror)
*/
.CodeMirror .CodeMirror {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-gutters {
  background: transparent;
  border-right: none;
}
.CodeMirror .CodeMirror .CodeMirror-activeline-background {
  background: transparent;
}
.CodeMirror .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: transparent;
  color: #767676;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline-background {
  background: #2f2f2f;
}
.CodeMirror .CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
  background: rgba(0, 0, 0, 0.2);
  color: #fff;
}
/* dropdown icon - normal */
.CodeMirror-foldgutter-open:after {
  color: #a7a7a7;
}
/* dropdown icon - when closed */
.CodeMirror-foldgutter-folded:after {
  color: #727272;
}
/* dropdown icon - hover */
.CodeMirror.over-gutter .CodeMirror-foldgutter-open:after,
.CodeMirror-activeline .CodeMirror-foldgutter-open:after {
  color: #8e8e8e;
}
/* three dotted line box */
.CodeMirror-foldmarker {
  border-color: #83ADBB;
  color: #1e1e1e;
  background-color: rgba(6, 159, 248, 0.16);
  box-shadow: inset 0px 0px 1px 0px #0D3D66;
}
/* Non-editor styling */
.image-view,
.not-editor {
  background-color: #fdfdfd;
}
.view-pane .image-view {
  color: #3a3a3a;
}
.CodeMirror-matchingbracket,
.CodeMirror-matchingtag {
  /* Ensure visibility against gray inline editor background */
  background-color: #1654D9;
  color: #ffffff !important;
}
/* Custom code colors or overrides should start after this line */
.CSS,
.HTML {
  /*******************************************************************
	// CSS devtools Zero Dark Matrix
	@css-at-rule   : #b094bb;
	@css-atom      : #ccc;
	@css-builtin   : #ff9635;
	@css-comment   : #676767;
	@css-def       : #ff9635;
	@css-important : #f00;
	@css-meta      : #6aedff;
	@css-number    : #ccc;
	@css-operator  : #ccc;
	@css-property  : #6aedff;
	@css-qualifier : #ff9635;
	@css-string    : #e3b959;
	@css-string-2  : #ccc;
	@css-tag       : #ff9635;
	@css-variable  : #ff9635;
	@css-variable-2: #ff9635;
	
	@css-selector	: @css-qualifier;				//firefox ??
	@css-keyword	: darken(@css-qualifier, 15%);	//not !important
	@css-pseudo		: lighten(@css-qualifier, 25%);	//variable-2
	@css-url       	: darken(@css-string, 15%);		// ??

	@css-selector  	: @css-qualifier;
	@css-selector-matches: lighten(@css-qualifier, 15%);
	******************************************************************/
}
.CSS .CodeMirror .cm-css-comment,
.HTML .CodeMirror .cm-css-comment {
  color: #676767 !important;
  font-style: italic;
}
.CSS .CodeMirror .cm-css-meta,
.HTML .CodeMirror .cm-css-meta,
.CSS .CodeMirror ::shadow .cm-css-meta,
.HTML .CodeMirror ::shadow .cm-css-meta {
  color: #009999;
}
.CSS .CodeMirror .webkit-css-color,
.HTML .CodeMirror .webkit-css-color,
.CSS .CodeMirror ::shadow .webkit-css-color,
.HTML .CodeMirror ::shadow .webkit-css-color {
  color: #009999;
}
.CSS .CodeMirror .cm-css-builtin,
.HTML .CodeMirror .cm-css-builtin,
.CSS .CodeMirror ::shadow .cm-css-builtin,
.HTML .CodeMirror ::shadow .cm-css-builtin {
  color: #ff00ff;
}
.CSS .CodeMirror .cm-css-qualifier,
.HTML .CodeMirror .cm-css-qualifier,
.CSS .CodeMirror ::shadow .cm-css-qualifier,
.HTML .CodeMirror ::shadow .cm-css-qualifier {
  color: #ff00ff;
}
.CSS .CodeMirror .cm-css-tag,
.HTML .CodeMirror .cm-css-tag,
.CSS .CodeMirror ::shadow .cm-css-tag,
.HTML .CodeMirror ::shadow .cm-css-tag {
  color: #ff00ff;
}
.webkit-css-selector.CSS .CodeMirror :not(.cm-css-variable-3),
.webkit-css-selector.HTML .CodeMirror :not(.cm-css-variable-3),
::shadow .webkit-css-selector.CSS .CodeMirror :not(.cm-css-variable-3),
::shadow .webkit-css-selector.HTML .CodeMirror :not(.cm-css-variable-3) {
  color: #ff00ff;
}
.CSS .CodeMirror .cm-css-property,
.HTML .CodeMirror .cm-css-property,
.CSS .CodeMirror .webkit-css-property,
.HTML .CodeMirror .webkit-css-property {
  color: #000000;
}
.CSS .CodeMirror .cm-css-atom,
.HTML .CodeMirror .cm-css-atom,
.CSS .CodeMirror ::shadow .cm-css-atom,
.HTML .CodeMirror ::shadow .cm-css-atom {
  color: #009999;
}
.CSS .CodeMirror .cm-css-def,
.HTML .CodeMirror .cm-css-def,
.CSS .CodeMirror ::shadow .cm-css-def,
.HTML .CodeMirror ::shadow .cm-css-def {
  color: #009999;
}
.CSS .CodeMirror .webkit-css-at-rule,
.HTML .CodeMirror .webkit-css-at-rule,
.CSS .CodeMirror ::shadow .webkit-css-at-rule,
.HTML .CodeMirror ::shadow .webkit-css-at-rule {
  color: #990000;
}
.CSS .CodeMirror .cm-css-attribute,
.HTML .CodeMirror .cm-css-attribute,
.CSS .CodeMirror .cm-css-variable,
.HTML .CodeMirror .cm-css-variable,
.CSS .CodeMirror ::shadow .cm-css-variable,
.HTML .CodeMirror ::shadow .cm-css-variable {
  color: #990000;
}
.CSS .CodeMirror .cm-css-keyword,
.HTML .CodeMirror .cm-css-keyword,
.CSS .CodeMirror ::shadow .cm-css-keyword,
.HTML .CodeMirror ::shadow .cm-css-keyword,
.CSS .CodeMirror .webkit-css-keyword,
.HTML .CodeMirror .webkit-css-keyword,
.CSS .CodeMirror ::shadow .webkit-css-keyword,
.HTML .CodeMirror ::shadow .webkit-css-keyword {
  color: #ff0000;
}
.CSS .CodeMirror .cm-property .cm-css-keyword,
.HTML .CodeMirror .cm-property .cm-css-keyword,
.CSS .CodeMirror .cm-attribute .cm-css-keyword,
.HTML .CodeMirror .cm-attribute .cm-css-keyword,
.CSS .CodeMirror .cm-property ::shadow .cm-css-keyword,
.HTML .CodeMirror .cm-property ::shadow .cm-css-keyword,
.CSS .CodeMirror .cm-attribute ::shadow .cm-css-keyword,
.HTML .CodeMirror .cm-attribute ::shadow .cm-css-keyword,
.CSS .CodeMirror .cm-property .webkit-css-keyword,
.HTML .CodeMirror .cm-property .webkit-css-keyword,
.CSS .CodeMirror .cm-attribute .webkit-css-keyword,
.HTML .CodeMirror .cm-attribute .webkit-css-keyword,
.CSS .CodeMirror .cm-property ::shadow .webkit-css-keyword,
.HTML .CodeMirror .cm-property ::shadow .webkit-css-keyword,
.CSS .CodeMirror .cm-attribute ::shadow .webkit-css-keyword,
.HTML .CodeMirror .cm-attribute ::shadow .webkit-css-keyword {
  color: #1a1aff;
}
.CSS .CodeMirror .cm-css-variable-2,
.HTML .CodeMirror .cm-css-variable-2,
.CSS .CodeMirror ::shadow .cm-css-variable-2,
.HTML .CodeMirror ::shadow .cm-css-variable-2 {
  color: #1a1aff;
}
.CSS .CodeMirror .cm-css-variable-3,
.HTML .CodeMirror .cm-css-variable-3,
.CSS .CodeMirror ::shadow .cm-css-variable-3,
.HTML .CodeMirror ::shadow .cm-css-variable-3 {
  color: #ff80ff;
}
.CSS .CodeMirror .cm-css-operator,
.HTML .CodeMirror .cm-css-operator,
.CSS .CodeMirror ::shadow .cm-css-operator,
.HTML .CodeMirror ::shadow .cm-css-operator {
  color: #0000b3;
}
.CSS .CodeMirror .cm-css-string,
.HTML .CodeMirror .cm-css-string,
.CSS .CodeMirror .webkit-css-string,
.HTML .CodeMirror .webkit-css-string,
.CSS .CodeMirror .CodeMirror .cm-css-string,
.HTML .CodeMirror .CodeMirror .cm-css-string {
  color: #006600;
}
.CSS .CodeMirror .cm-css-string-2,
.HTML .CodeMirror .cm-css-string-2,
.CSS .CodeMirror ::shadow .cm-css-string-2,
.HTML .CodeMirror ::shadow .cm-css-string-2 {
  color: #8080ff;
}
.CSS .CodeMirror .cm-css-number .webkit-css-number,
.HTML .CodeMirror .cm-css-number .webkit-css-number,
.CSS .CodeMirror ::shadow .cm-css-number,
.HTML .CodeMirror ::shadow .cm-css-number {
  color: #8080ff;
}
.CSS .CodeMirror .webkit-css-url,
.HTML .CodeMirror .webkit-css-url,
.CSS .CodeMirror ::shadow .webkit-css-url,
.HTML .CodeMirror ::shadow .webkit-css-url {
  color: #001a00;
}
/*
@js-defaultColor: #CCC;	 		//devtools Zero Dark Matrix
@js-atom      	: #89f5a2;
@js-attribute   : #4e87bf;
@js-builtin     : #8da6ce;
@js-comment     : #676767;
@js-def         : #49a6d2;
@js-error       : #f8f8f8;
@js-header      : #ff6400;
@js-hr          : #aeaeae;
@js-keyword     : #8b6ccf;
@js-link        : #8da6ce;
@js-meta        : #d8fa3c;
@js-number      : #89f5a2;
@js-operator    : #cdb943;
@js-property    : #cdb943;
@js-string      : #f07b3c;
@js-tag         : #49a6d2;
@js-variable    : #ccc;
@js-variable-2  : #ccc;
@js-obj-regexp  : #ff54e8;

*/
.JavaScript .cm-js-comment,
.HTML .cm-js-comment {
  color: #999999;
  font-style: italic;
}
.JavaScript .cm-js-error,
.HTML .cm-js-error {
  color: white;
  background: red;
}
.JavaScript .cm-js-atom,
.HTML .cm-js-atom {
  color: #ff0000;
}
.JavaScript .cm-js-attribute,
.HTML .cm-js-attribute {
  color: #990099;
}
.JavaScript .cm-js-builtin,
.HTML .cm-js-builtin {
  color: #009999;
}
.JavaScript .cm-js-comment,
.HTML .cm-js-comment {
  color: #999999;
  font-style: italic;
}
.JavaScript .cm-js-def,
.HTML .cm-js-def {
  color: #000000;
}
.JavaScript .cm-js-header,
.HTML .cm-js-header {
  color: #000099;
}
.JavaScript .cm-js-hr,
.HTML .cm-js-hr {
  color: #000099;
}
.JavaScript .cm-js-keyword,
.HTML .cm-js-keyword {
  color: #000099;
  font-style: italic;
}
.JavaScript .cm-js-link,
.HTML .cm-js-link {
  color: #009999;
}
.JavaScript .cm-js-meta,
.HTML .cm-js-meta {
  color: #990099;
}
.JavaScript .cm-js-number,
.HTML .cm-js-number {
  color: #ff0000;
}
.JavaScript .cm-js-operator,
.HTML .cm-js-operator {
  color: #0000ff;
}
.JavaScript .cm-js-property,
.HTML .cm-js-property {
  color: #0000ff;
}
.JavaScript .cm-js-string,
.HTML .cm-js-string {
  color: #0000ff;
}
.JavaScript .cm-js-string-2,
.HTML .cm-js-string-2 {
  color: #006600;
}
.JavaScript .cm-js-tag,
.HTML .cm-js-tag {
  color: #000099;
}
.JavaScript .cm-js-variable,
.HTML .cm-js-variable {
  color: #000000;
}
.JavaScript .cm-js-variable-2,
.HTML .cm-js-variable-2 {
  color: #000000;
}
/*							//...Adobe/Brackets assumes #FFF
.-();
.-() when (@tagHighlightFG = "none") {@killMatching: !important;}
.-() when (@tagHighlightFG != "none") {@killMatching:;}
*/
.HTML .cm-m-xml.cm-tag,
.HTML .cm-m-xml.cm-quote {
  color: #000099 !important;
  background: #ffffff !important;
}
.HTML .cm-m-xml:not(CodeMirror-matchingtag) {
  background: #ffffff !important;
}
.HTML .cm-m-xml.CodeMirror-matchingtag {
  background: #e6e6e6 !important;
  color: #000099 !important;
}
.HTML .cm-m-xml.cm-tag.CodeMirror-matchingtag:not(.cm-bracket) {
  font-weight: 900 !important;
}
.HTML .cm-m-xml.cm-tag.CodeMirror-matchingtag {
  background: #e6e6e6 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-script {
  color: #900 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-style {
  color: #909 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-a {
  color: #060 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-form {
  color: #ff9900 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-button,
.HTML .cm-m-xml.cm-tag.cm-tag-input,
.HTML .cm-m-xml.cm-tag.cm-tag-textarea {
  color: #F90 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-object {
  color: #900 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-img {
  color: #909 !important;
}
.HTML .cm-m-xml.cm-tag.cm-tag-table,
.HTML .cm-m-xml.cm-tag.cm-tag-thead,
.HTML .cm-m-xml.cm-tag.cm-tag-tbody,
.HTML .cm-m-xml.cm-tag.cm-tag-th,
.HTML .cm-m-xml.cm-tag.cm-tag-tbody,
.HTML .cm-m-xml.cm-tag.cm-tag-tr,
.HTML .cm-m-xml.cm-tag.cm-tag-td {
  color: #099 !important;
}
.HTML .cm-m-xml.cm-comment {
  color: #999999 !important;
}
.HTML .cm-m-xml.cm-attribute,
.HTML .cm-m-xml.cm-qualifier {
  color: #990099 !important;
}
.HTML .cm-m-xml.cm-string {
  color: #0000ff !important;
}
.HTML .cm-m-xml.cm-number {
  color: #0000ff !important;
}
.HTML .cm-m-xml.cm-special {
  color: #000000 !important;
}
/*=========================================================================
	UNFORTUNATELY !important is required to override color from below css...
	...defined above -AND- in BracketsDWExtension/.../default-code-coloring.css
	
		.CodeMirror-matchingbracket, .CodeMirror-matchingtag {
			background-color: #1654D9;
			color: #ffffff !important;
		}
	=========================================================================*/
/****************************************************************
Start of: Notable code view cursor and selected text or tag(s)
https://github.com/flkeysgeek/DW-CC-2017-code-coloring-pref   

NOTE: 
    DW prefixes all these selectors with "#editor-holder" so 

        body.dark .CodeMirror-cursor

    becomes 
        #editor-holder body.dark .CodeMirror-cursor

    ...so the following form is used to reference body class:

        body.dark & .CodeMirror-cursor {                  

    becomes:
        body.dark #editor-holder .CodeMirror-cursor {                  

*****************************************************************/
body:not(.dark)  span.CodeMirror-matchingbracket {
  background: #A0E2F6;
  color: white !important;
  border-radius: 4px;
  font-weight: 400;
  max-height: 14px;
  transition: all 1.0s 20.0s;
}
/*************************************/
/* line numbers -- lighter for dark */
/***********************************/
body.dark  .CodeMirror-linenumber {
  color: #B2B2B2;
}
/***************************************/
/* comments -- not dull grey #919191; */
/*************************************/
body.dark  .cm-comment {
  color: rgba(255, 192, 203, 0.9);
  /* light pink for dark */
  font-style: normal;
  /* kill italics default */
}
body:not(.dark)  .cm-comment {
  color: #007F00;
  /* green for light theme */
}
/*******************************/
/* cursor -- taller and wider */
/*****************************/
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursors {
  visibility: visible !important;
  /* in case DW left wrapper hidden */
  opacity: 1.0;
  /* in case animation did not finish */
}
body.dark  .CodeMirror .CodeMirror-cursor,
.CodeMirror-cursors:not(.CodeMirror-overwrite) .CodeMirror-cursor {
  border-left: 2px solid yellow !important;
  margin-top: -1px !important;
}
body:not(.dark)  .CodeMirror .CodeMirror-cursor,
.CodeMirror-cursors:not(.CodeMirror-overwrite) .CodeMirror-cursor {
  border-left: 2px solid navy !important;
  margin-top: -1px !important;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-overwrite .CodeMirror-cursor {
  border-left: 1px solid yellow !important;
  border-bottom: 0px solid red;
}
.CodeMirror.CodeMirror-focused .CodeMirror-overwrite .CodeMirror-cursor {
  border-bottom: 3px solid red;
  /* thick red for overwrite mode */
  margin-top: -2px !important;
  border-left: 0px solid transparent !important;
  width: 0.7em;
}
/*****************************************/
/* tail on cursor when code view blured */
/***************************************/
zzz.CodeMirror.CodeMirror-focused .CodeMirror-cursor:after {
  border-left-width: 0px !important;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0px;
  border-style: solid;
  border-color: transparent;
  border-width: 7.3px 0px 7px 0px;
  height: 0px;
  display: inline-block;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor {
  min-height: 14px;
  line-height: 14px;
}
/****************************************/
/* blinking cursor in code view blured */
/**************************************/
@keyframes blinking {
  0% {
    opacity: 1.0;
  }
  50% {
    opacity: 0.0;
  }
  100% {
    opacity: 1.0;
  }
}
.CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-cursor {
  animation: blinking 1.5s 10;
  -webkit-transition: all 1.0s 20.0s;
  transition: all 1.0s 20.0s;
  opacity: 1.0;
  border-left-width: 1px;
}
.CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {
  border-left-width: 30px !important;
}
body.dark  .CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {
  border-left-color: rgba(240, 255, 0, 0.4);
}
body:not(.dark)  .CodeMirror:not(.CodeMirror-focused) .CodeMirror-cursor:after {
  border-left-color: rgba(159, 225, 244, 0.6);
}
/*********************************************/
/* BG color of selected text or html tag(s) */
/*******************************************/
body.dark  .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected {
  background: rgba(0, 149, 255, 0.6);
}
body:not(.dark)  .CodeMirror:not(.CodeMirror-focused) .CodeMirror-selected {
  background: rgba(121, 215, 244, 0.7);
}
/*************************************/
/* arrows above and below selection */
/***********************************/
.CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:first-of-type:before,
.CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:last-of-type:after {
  content: "";
  position: absolute;
  border-style: solid;
  border-color: transparent;
  height: 0px;
  display: inline-block;
}
.CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:first-of-type:before {
  top: -6px;
  left: -11px;
  border-width: 5px 0px 5px 14px;
  transform: rotate(50deg);
}
.CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:last-of-type:after {
  bottom: -6px;
  right: -11px;
  border-width: 5px 14px 5px 0px;
  transform: rotate(50deg);
}
body.dark .CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:first-of-type:before {
  border-left-color: #ffc41d;
}
body.dark .CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:last-of-type:after {
  border-right-color: #ffc41d;
}
body:not(.dark) .CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:first-of-type:before {
  border-left-color: darkblue;
}
body:not(.dark) .CodeMirror:not(.CodeMirror-focused).HTML .CodeMirror-selected:last-of-type:after {
  border-right-color: darkblue;
}
/************************************/
/* tag highlighted -- keeps colors */
/**********************************/
/*****************************************************************/
/* end of: Notable code view selection and cursor                */
/*****************************************************************/
span.cm-m-xml.cm-tag.cm-tag-body {
  color: red;
}

/*# sourceMappingURL=Classic CC 2015.main.css.map */